name: Build and Publish

on:
  # run it on push to the default repository branch
  push:
    branches: [main]
  # run it during pull request
  pull_request:

jobs:
  # define job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          # Note: tags has to be all lower-case
          images: ${{ github.repository }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{branch}}.${{github.run_number}}

      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v3
        env:
          GIT_COMMIT: ${{ env.GITHUB_SHA }}
        #  GIT_BRANCH: ${{ env.GITHUB_REF_NAME }}
        #  BUILD_NUMBER: ${{ env.GITHUB_RUN_NUMBER }}
        #  BUILD_VERSION: ${{ env.GITHUB_REF_NAME }}.${{ env.GITHUB_RUN_NUMBER }}
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          file: docker/Dockerfile
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}
          build-args: |
            __GIT_COMMIT=${{ env.GITHUB_SHA }}
            GIT_BRANCH=${{ env.GITHUB_REF_NAME }}
            BUILD_NUMBER=${{ github.run_number }}
            BUILD_VERSION=${{ github.repository }}.${{ env.GITHUB_RUN_NUMBER }}
            ARG1=foo
            ARG2=bar
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
